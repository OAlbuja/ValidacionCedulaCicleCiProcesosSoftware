version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.9 # Declaración del orb browser-tools

executors:
  frontend-executor:
    docker:
      - image: cimg/node:20.0.0
    working_directory: ~/repo/frontend # Usamos el directorio raíz del repo

  backend-executor:
    docker:
      - image: cimg/openjdk:17.0
    working_directory: ~/repo # Usamos el directorio raíz del repo

jobs:
  pre-build-frontend:
    executor: frontend-executor
    steps:
      - checkout
      - run:
          name: Instalar dependencias del frontend
          command: cd frontend && npm install
      - run:
          name: Análisis estático del código (ESLint)
          command: cd frontend && npm run lint
      - run:
          name: Auditoría de dependencias del frontend
          command: cd frontend && npm audit --audit-level=moderate || echo "Vulnerabilidades detectadas"

  pre-build-backend:
    executor: backend-executor
    steps:
      - checkout
      - run:
          name: Instalar dependencias del backend
          command: cd CedulaApi && mvn install -DskipTests
      - run:
          name: Análisis estático del código (Checkstyle)
          command: cd CedulaApi && mvn checkstyle:check
      - run:
          name: Verificar dependencias obsoletas en el backend
          command: cd CedulaApi && mvn versions:display-dependency-updates

  build-frontend:
    executor: frontend-executor
    steps:
      - checkout
      - run:
          name: Instalar dependencias
          command: cd frontend && npm install
      - run:
          name: Construir el frontend
          command: cd frontend && npx ng build --configuration=production

  build-backend:
    executor: backend-executor
    steps:
      - checkout
      - run:
          name: Compilar el backend
          command: cd CedulaApi && mvn clean package

  test-frontend:
    executor: frontend-executor
    steps:
      - checkout
      - browser-tools/install-browser-tools
      - run:
          name: Instalar dependencias
          command: cd frontend && npm install
      - run:
          name: Ejecutar pruebas unitarias del frontend
          command: cd frontend && npm run test -- --no-watch --no-progress --browsers=ChromeHeadless

  test-backend:
    executor: backend-executor
    steps:
      - checkout
      - run:
          name: Ejecutar pruebas unitarias del backend
          command: cd CedulaApi && mvn test

  deploy:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Construcción de imágenes Docker
          command: |
            docker build -t mi-backend:latest -f CedulaApi/Dockerfile CedulaApi
            docker build -t mi-frontend:latest -f frontend/Dockerfile frontend
      - run:
          name: Levantar aplicación con Docker Compose
          command: |
            docker-compose up -d
      - run:
          name: Verificar contenedores corriendo
          command: |
            docker ps

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - pre-build-frontend
      - pre-build-backend
      - build-frontend:
          requires:
            - pre-build-frontend
      - build-backend:
          requires:
            - pre-build-backend
      - test-frontend:
          requires:
            - build-frontend
      - test-backend:
          requires:
            - build-backend
      - deploy:
          requires:
            - test-frontend
            - test-backend
